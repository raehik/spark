---
- hosts: localhost
  become: yes
  roles:
    # dynamic roles, can keep on
    - { role: microcode, tags: ['microcode'], when: "'GenuineIntel' in ansible_processor" }
    - { role: thinkpad, tags: ['thinkpad'], when: "'ThinkPad' in ansible_product_version" }
    - { role: macbook, tags: ['macbook'], when: "'MacBook' in ansible_product_name" }
    - { role: ssd, tags: ['ssd'] } # only does anything if /dev/sda is an SSD

    # primary roles
    - { role: locale, tags: ['locale'] }
    - { role: systemd-boot, tags: ['systemd-boot'] }
      #- { role: base, tags: ['base'] }
    - { role: ssh, tags: ['ssh'] }

    # TODO
    #- { role: hostsctl, tags: ['hostsctl'], when: "hostsctl is defined" }
    #- { role: gnupg, tags: ['gnupg'] }
    #- { role: cron, tags: ['cron'] }
    #- { role: sound, tags: ['sound'] }
    #- { role: pass, tags: ['pass'] }
    #- { role: iptables, tags: ['iptables'] }
    #- { role: networkmanager, tags: ['networkmanager'] }
      #- { role: nettools, tags: ['nettools'] }
      #- { role: macchiato, tags: ['macchiato'] }
      #- { role: ntp, tags: ['ntp'] }
      #- { role: dotfiles, tags: ['dotfiles'] }
      #- { role: fonts, tags: ['fonts'] }
      #- { role: x, tags: ['x'] }
      #- { role: i3, tags: ['i3'], when: "desktop_environment == 'i3'" }
      #- { role: lightdm, tags: ['lightdm'], when: "display_manager == 'lightdm'" }
      #- { role: firejail, tags: ['firejail'] }
      #- { role: tor, tags: ['tor'], when: "tor is defined" }
      #- { role: unbound, tags: ['unbound'] }
      #- { role: udisks, tags: ['udisks'] }
      #- { role: spell, tags: ['spell'] }
      #- { role: browsers, tags: ['browsers'] }
      #- { role: pianobar, tags: ['pianobar'] }
      #- { role: screensaver, tags: ['screensaver'] }
      #- { role: bitlbee, tags: ['bitlbee'] }
      #- { role: git-annex, tags: ['git-annex'], when: "gitannex is defined" }
      #- { role: taskwarrior, tags: ['taskwarrior'] }
      #- { role: ledger, tags: ['ledger'] }
      #- { role: mail, tags: ['mail'] }
      #- { role: cups, tags: ['cups'] }
      #- { role: office, tags: ['office'] }
      #- { role: redshift, tags: ['redshift'] }
      #- { role: rtorrent, tags: ['rtorrent'] }
      #- { role: virtualbox, tags: ['virtualbox'] }
      #- { role: hashicorp, tags: ['hashicorp'] }
      #- { role: virtualenv, tags: ['virtualenv'] }
      #- { role: backitup, tags: ['backitup'] }
      #- { role: cryptshot, tags: ['cryptshot'], when: "cryptshot is defined" }
      #- { role: borg, tags: ['borg'] }
      #- { role: tarsnap, tags: ['tarsnap'] }
      #- { role: mapping, tags: ['mapping'] }
      #- { role: pim, tags: ['pim'] }
      #- { role: radio, tags: ['radio'] }
      #- { role: formd, tags: ['formd'] }
      #- { role: postgresql, tags: ['postgresql'] }
      #- { role: calibre, tags: ['calibre'] }
      #- { role: aws, tags: ['aws'] }
      #- { role: parcimonie, tags: ['parcimonie'], when: "tor is defined" }
      #- { role: wormhole, tags: ['wormhole'] }
      #- { role: bluetooth, tags: ['bluetooth'], when: "bluetooth is defined" }
      #- { role: wttr, tags: ['wttr'] }
      #- { role: himawaripy, tags: ['himawaripy'], when: "himawaripy is defined" }
      #- { role: kiwix, tags: ['kiwix'] }
      #- { role: syncthing, tags: ['syncthing'], when: "syncthing is defined" }
      #- { role: gdm, tags: ['gdm'], when: "display_manager == 'gdm'" }
      #- { role: gnome, tags: ['gnome'], when: "desktop_environment == 'gnome'" }
      #- { role: yubikey, tags: ['yubikey'] }
      #- { role: media, tags: ['media'] }
      #- { role: mpd, tags: ['mpd'] }
      #- { role: mpv, tags: ['mpv'] }
      #- { role: weechat, tags: ['weechat'] }
      #- { role: editors, tags: ['editors'] }
      #- { role: filesystems, tags: ['filesystems'] }
      #- { role: archive, tags: ['archive'] }
      #- { role: hardened, tags: ['hardened'] }
  vars_prompt:
    - name: user_password
      prompt: "Enter desired user password"
